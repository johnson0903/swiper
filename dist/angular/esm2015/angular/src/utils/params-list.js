/* underscore in name -> watch for changes */
export const paramsList = [
    'init',
    '_direction',
    'touchEventsTarget',
    'initialSlide',
    '_speed',
    'cssMode',
    'updateOnWindowResize',
    'resizeObserver',
    'nested',
    'focusableElements',
    '_width',
    '_height',
    'preventInteractionOnTransition',
    'userAgent',
    'url',
    '_edgeSwipeDetection',
    '_edgeSwipeThreshold',
    '_freeMode',
    '_autoHeight',
    'setWrapperSize',
    'virtualTranslate',
    '_effect',
    'breakpoints',
    '_spaceBetween',
    '_slidesPerView',
    '_grid',
    '_slidesPerGroup',
    '_slidesPerGroupSkip',
    '_centeredSlides',
    '_centeredSlidesBounds',
    '_slidesOffsetBefore',
    '_slidesOffsetAfter',
    'normalizeSlideIndex',
    '_centerInsufficientSlides',
    '_watchOverflow',
    'roundLengths',
    'touchRatio',
    'touchAngle',
    'simulateTouch',
    '_shortSwipes',
    '_longSwipes',
    'longSwipesRatio',
    'longSwipesMs',
    '_followFinger',
    'allowTouchMove',
    '_threshold',
    'touchMoveStopPropagation',
    'touchStartPreventDefault',
    'touchStartForcePreventDefault',
    'touchReleaseOnEdges',
    'uniqueNavElements',
    '_resistance',
    '_resistanceRatio',
    '_watchSlidesProgress',
    '_grabCursor',
    'preventClicks',
    'preventClicksPropagation',
    '_slideToClickedSlide',
    '_preloadImages',
    'updateOnImagesReady',
    '_loop',
    '_loopAdditionalSlides',
    '_loopedSlides',
    '_loopFillGroupWithBlank',
    'loopPreventsSlide',
    '_allowSlidePrev',
    '_allowSlideNext',
    '_swipeHandler',
    '_noSwiping',
    'noSwipingClass',
    'noSwipingSelector',
    'passiveListeners',
    'containerModifierClass',
    'slideClass',
    'slideBlankClass',
    'slideActiveClass',
    'slideDuplicateActiveClass',
    'slideVisibleClass',
    'slideDuplicateClass',
    'slideNextClass',
    'slideDuplicateNextClass',
    'slidePrevClass',
    'slideDuplicatePrevClass',
    'wrapperClass',
    'runCallbacksOnInit',
    'observer',
    'observeParents',
    'observeSlideChildren',
    // modules
    'a11y',
    'autoplay',
    '_controller',
    'coverflowEffect',
    'cubeEffect',
    'fadeEffect',
    'flipEffect',
    'creativeEffect',
    'cardsEffect',
    'hashNavigation',
    'history',
    'keyboard',
    'lazy',
    'mousewheel',
    '_navigation',
    '_pagination',
    'parallax',
    '_scrollbar',
    '_thumbs',
    'virtual',
    'zoom',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyYW1zLWxpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYW5ndWxhci9zcmMvdXRpbHMvcGFyYW1zLWxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN4QixNQUFNO0lBQ04sWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsUUFBUTtJQUNSLFNBQVM7SUFDVCxzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLFFBQVE7SUFDUixtQkFBbUI7SUFDbkIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7SUFDaEMsV0FBVztJQUNYLEtBQUs7SUFDTCxxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsT0FBTztJQUNQLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsaUJBQWlCO0lBQ2pCLHVCQUF1QjtJQUN2QixxQkFBcUI7SUFDckIsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7SUFDZixjQUFjO0lBQ2QsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osMEJBQTBCO0lBQzFCLDBCQUEwQjtJQUMxQiwrQkFBK0I7SUFDL0IscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQixPQUFPO0lBQ1AsdUJBQXVCO0lBQ3ZCLGVBQWU7SUFDZix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFFdEIsVUFBVTtJQUNWLE1BQU07SUFDTixVQUFVO0lBQ1YsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsVUFBVTtJQUNWLE1BQU07SUFDTixZQUFZO0lBQ1osYUFBYTtJQUNiLGFBQWE7SUFDYixVQUFVO0lBQ1YsWUFBWTtJQUNaLFNBQVM7SUFDVCxTQUFTO0lBQ1QsTUFBTTtDQUNQLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB1bmRlcnNjb3JlIGluIG5hbWUgLT4gd2F0Y2ggZm9yIGNoYW5nZXMgKi9cclxuZXhwb3J0IGNvbnN0IHBhcmFtc0xpc3QgPSBbXHJcbiAgJ2luaXQnLFxyXG4gICdfZGlyZWN0aW9uJyxcclxuICAndG91Y2hFdmVudHNUYXJnZXQnLFxyXG4gICdpbml0aWFsU2xpZGUnLFxyXG4gICdfc3BlZWQnLFxyXG4gICdjc3NNb2RlJyxcclxuICAndXBkYXRlT25XaW5kb3dSZXNpemUnLFxyXG4gICdyZXNpemVPYnNlcnZlcicsXHJcbiAgJ25lc3RlZCcsXHJcbiAgJ2ZvY3VzYWJsZUVsZW1lbnRzJyxcclxuICAnX3dpZHRoJyxcclxuICAnX2hlaWdodCcsXHJcbiAgJ3ByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbicsXHJcbiAgJ3VzZXJBZ2VudCcsXHJcbiAgJ3VybCcsXHJcbiAgJ19lZGdlU3dpcGVEZXRlY3Rpb24nLFxyXG4gICdfZWRnZVN3aXBlVGhyZXNob2xkJyxcclxuICAnX2ZyZWVNb2RlJyxcclxuICAnX2F1dG9IZWlnaHQnLFxyXG4gICdzZXRXcmFwcGVyU2l6ZScsXHJcbiAgJ3ZpcnR1YWxUcmFuc2xhdGUnLFxyXG4gICdfZWZmZWN0JyxcclxuICAnYnJlYWtwb2ludHMnLFxyXG4gICdfc3BhY2VCZXR3ZWVuJyxcclxuICAnX3NsaWRlc1BlclZpZXcnLFxyXG4gICdfZ3JpZCcsXHJcbiAgJ19zbGlkZXNQZXJHcm91cCcsXHJcbiAgJ19zbGlkZXNQZXJHcm91cFNraXAnLFxyXG4gICdfY2VudGVyZWRTbGlkZXMnLFxyXG4gICdfY2VudGVyZWRTbGlkZXNCb3VuZHMnLFxyXG4gICdfc2xpZGVzT2Zmc2V0QmVmb3JlJyxcclxuICAnX3NsaWRlc09mZnNldEFmdGVyJyxcclxuICAnbm9ybWFsaXplU2xpZGVJbmRleCcsXHJcbiAgJ19jZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXMnLFxyXG4gICdfd2F0Y2hPdmVyZmxvdycsXHJcbiAgJ3JvdW5kTGVuZ3RocycsXHJcbiAgJ3RvdWNoUmF0aW8nLFxyXG4gICd0b3VjaEFuZ2xlJyxcclxuICAnc2ltdWxhdGVUb3VjaCcsXHJcbiAgJ19zaG9ydFN3aXBlcycsXHJcbiAgJ19sb25nU3dpcGVzJyxcclxuICAnbG9uZ1N3aXBlc1JhdGlvJyxcclxuICAnbG9uZ1N3aXBlc01zJyxcclxuICAnX2ZvbGxvd0ZpbmdlcicsXHJcbiAgJ2FsbG93VG91Y2hNb3ZlJyxcclxuICAnX3RocmVzaG9sZCcsXHJcbiAgJ3RvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbicsXHJcbiAgJ3RvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdCcsXHJcbiAgJ3RvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0JyxcclxuICAndG91Y2hSZWxlYXNlT25FZGdlcycsXHJcbiAgJ3VuaXF1ZU5hdkVsZW1lbnRzJyxcclxuICAnX3Jlc2lzdGFuY2UnLFxyXG4gICdfcmVzaXN0YW5jZVJhdGlvJyxcclxuICAnX3dhdGNoU2xpZGVzUHJvZ3Jlc3MnLFxyXG4gICdfZ3JhYkN1cnNvcicsXHJcbiAgJ3ByZXZlbnRDbGlja3MnLFxyXG4gICdwcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24nLFxyXG4gICdfc2xpZGVUb0NsaWNrZWRTbGlkZScsXHJcbiAgJ19wcmVsb2FkSW1hZ2VzJyxcclxuICAndXBkYXRlT25JbWFnZXNSZWFkeScsXHJcbiAgJ19sb29wJyxcclxuICAnX2xvb3BBZGRpdGlvbmFsU2xpZGVzJyxcclxuICAnX2xvb3BlZFNsaWRlcycsXHJcbiAgJ19sb29wRmlsbEdyb3VwV2l0aEJsYW5rJyxcclxuICAnbG9vcFByZXZlbnRzU2xpZGUnLFxyXG4gICdfYWxsb3dTbGlkZVByZXYnLFxyXG4gICdfYWxsb3dTbGlkZU5leHQnLFxyXG4gICdfc3dpcGVIYW5kbGVyJyxcclxuICAnX25vU3dpcGluZycsXHJcbiAgJ25vU3dpcGluZ0NsYXNzJyxcclxuICAnbm9Td2lwaW5nU2VsZWN0b3InLFxyXG4gICdwYXNzaXZlTGlzdGVuZXJzJyxcclxuICAnY29udGFpbmVyTW9kaWZpZXJDbGFzcycsXHJcbiAgJ3NsaWRlQ2xhc3MnLFxyXG4gICdzbGlkZUJsYW5rQ2xhc3MnLFxyXG4gICdzbGlkZUFjdGl2ZUNsYXNzJyxcclxuICAnc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzcycsXHJcbiAgJ3NsaWRlVmlzaWJsZUNsYXNzJyxcclxuICAnc2xpZGVEdXBsaWNhdGVDbGFzcycsXHJcbiAgJ3NsaWRlTmV4dENsYXNzJyxcclxuICAnc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MnLFxyXG4gICdzbGlkZVByZXZDbGFzcycsXHJcbiAgJ3NsaWRlRHVwbGljYXRlUHJldkNsYXNzJyxcclxuICAnd3JhcHBlckNsYXNzJyxcclxuICAncnVuQ2FsbGJhY2tzT25Jbml0JyxcclxuICAnb2JzZXJ2ZXInLFxyXG4gICdvYnNlcnZlUGFyZW50cycsXHJcbiAgJ29ic2VydmVTbGlkZUNoaWxkcmVuJyxcclxuXHJcbiAgLy8gbW9kdWxlc1xyXG4gICdhMTF5JyxcclxuICAnYXV0b3BsYXknLFxyXG4gICdfY29udHJvbGxlcicsXHJcbiAgJ2NvdmVyZmxvd0VmZmVjdCcsXHJcbiAgJ2N1YmVFZmZlY3QnLFxyXG4gICdmYWRlRWZmZWN0JyxcclxuICAnZmxpcEVmZmVjdCcsXHJcbiAgJ2NyZWF0aXZlRWZmZWN0JyxcclxuICAnY2FyZHNFZmZlY3QnLFxyXG4gICdoYXNoTmF2aWdhdGlvbicsXHJcbiAgJ2hpc3RvcnknLFxyXG4gICdrZXlib2FyZCcsXHJcbiAgJ2xhenknLFxyXG4gICdtb3VzZXdoZWVsJyxcclxuICAnX25hdmlnYXRpb24nLFxyXG4gICdfcGFnaW5hdGlvbicsXHJcbiAgJ3BhcmFsbGF4JyxcclxuICAnX3Njcm9sbGJhcicsXHJcbiAgJ190aHVtYnMnLFxyXG4gICd2aXJ0dWFsJyxcclxuICAnem9vbScsXHJcbl07XHJcbiJdfQ==